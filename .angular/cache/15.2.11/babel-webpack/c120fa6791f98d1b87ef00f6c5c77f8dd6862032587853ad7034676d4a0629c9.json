{"ast":null,"code":"import { Appointment } from '../appointment'; // Adjust path as per your project structure\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../appointment.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class CreateAppointmentComponent {\n  constructor(appointmentService, router) {\n    this.appointmentService = appointmentService;\n    this.router = router;\n    this.appointment = new Appointment();\n  }\n  onSubmit() {\n    this.saveAppointment();\n  }\n  saveAppointment() {\n    this.appointmentService.createAppointment(this.appointment).subscribe(data => {\n      console.log(data);\n      this.goToAppointmentList();\n    });\n  }\n  goToAppointmentList() {\n    this.router.navigate(['/appointmentlist']);\n  }\n  static #_ = this.ɵfac = function CreateAppointmentComponent_Factory(t) {\n    return new (t || CreateAppointmentComponent)(i0.ɵɵdirectiveInject(i1.AppointmentService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateAppointmentComponent,\n    selectors: [[\"app-create-appointment\"]],\n    decls: 33,\n    vars: 6,\n    consts: [[1, \"container\"], [1, \"text-center\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"doctorName\", \"name\", \"doctorName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"age\", \"name\", \"age\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"symptoms\", \"name\", \"symptoms\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"mobile\", \"name\", \"mobile\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"appointmentNumber\", \"name\", \"appointmentNumber\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [\"type\", \"reset\", 1, \"btn\", \"btn-success\"]],\n    template: function CreateAppointmentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2, \"Add New Appointment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateAppointmentComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\");\n        i0.ɵɵtext(6, \"Patient Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateAppointmentComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.appointment.name = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\");\n        i0.ɵɵtext(10, \"Doctor Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateAppointmentComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.appointment.doctorName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\");\n        i0.ɵɵtext(14, \"Age\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateAppointmentComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.appointment.age = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 3)(17, \"label\");\n        i0.ɵɵtext(18, \"Symptoms\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateAppointmentComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.appointment.symptoms = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 3)(21, \"label\");\n        i0.ɵɵtext(22, \"Mobile\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateAppointmentComponent_Template_input_ngModelChange_23_listener($event) {\n          return ctx.appointment.mobile = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 3)(25, \"label\");\n        i0.ɵɵtext(26, \"Appointment Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateAppointmentComponent_Template_input_ngModelChange_27_listener($event) {\n          return ctx.appointment.appointmentNumber = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"button\", 10);\n        i0.ɵɵtext(29, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(30, \"// I want space between Submit and Reset button and both are center \");\n        i0.ɵɵelementStart(31, \"button\", 11);\n        i0.ɵɵtext(32, \"Reset\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.appointment.name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.appointment.doctorName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.appointment.age);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.appointment.symptoms);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.appointment.mobile);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.appointment.appointmentNumber);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,WAAW,QAAQ,gBAAgB,CAAC,CAAC;;;;;AAS9C,OAAM,MAAOC,0BAA0B;EAIrCC,YAAoBC,kBAAsC,EAAUC,MAAc;IAA9D,uBAAkB,GAAlBD,kBAAkB;IAA8B,WAAM,GAANC,MAAM;IAF1E,gBAAW,GAAgB,IAAIJ,WAAW,EAAE;EAE0C;EAEtFK,QAAQ;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EAEAA,eAAe;IACb,IAAI,CAACH,kBAAkB,CAACI,iBAAiB,CAAC,IAAI,CAACC,WAAW,CAAC,CAACC,SAAS,CAACC,IAAI,IAAG;MAC3EC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAI,CAACG,mBAAmB,EAAE;IAC5B,CAAC,CAAC;EACJ;EAEAA,mBAAmB;IACjB,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;EAC5C;EAAC;qBAnBUb,0BAA0B;EAAA;EAAA;UAA1BA,0BAA0B;IAAAc;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCVvCC,8BAAuB;QACKA,mCAAmB;QAAAA,iBAAK;QAEhDA,+BAA8B;QAAxBA;UAAA,OAAYC,cAAU;QAAA,EAAC;QAC3BD,8BAAwB;QACfA,4BAAY;QAAAA,iBAAQ;QAC3BA,gCAA6F;QAA/BA;UAAA;QAAA,EAA8B;QAA5FA,iBAA6F;QAG/FA,8BAAwB;QACfA,4BAAW;QAAAA,iBAAQ;QAC1BA,iCAA+G;QAArCA;UAAA;QAAA,EAAoC;QAA9GA,iBAA+G;QAGjHA,+BAAwB;QACfA,oBAAG;QAAAA,iBAAQ;QAClBA,iCAA0F;QAA9BA;UAAA;QAAA,EAA6B;QAAzFA,iBAA0F;QAG5FA,+BAAwB;QACfA,yBAAQ;QAAAA,iBAAQ;QACvBA,iCAAyG;QAAnCA;UAAA;QAAA,EAAkC;QAAxGA,iBAAyG;QAG3GA,+BAAwB;QACfA,uBAAM;QAAAA,iBAAQ;QACrBA,iCAAmG;QAAjCA;UAAA;QAAA,EAAgC;QAAlGA,iBAAmG;QAGrGA,+BAAwB;QACfA,mCAAkB;QAAAA,iBAAQ;QACjCA,iCAAoI;QAA5CA;UAAA;QAAA,EAA2C;QAAnIA,iBAAoI;QAGtIA,mCAA8C;QAAAA,uBAAM;QAAAA,iBAAS;QAAAA,qFAE7D;QAAAA,mCAA6C;QAAAA,sBAAK;QAAAA,iBAAS;;;QA9BKA,eAA8B;QAA9BA,8CAA8B;QAKlBA,eAAoC;QAApCA,oDAAoC;QAKlDA,eAA6B;QAA7BA,6CAA6B;QAKnBA,eAAkC;QAAlCA,kDAAkC;QAKtCA,eAAgC;QAAhCA,gDAAgC;QAKVA,eAA2C;QAA3CA,2DAA2C","names":["Appointment","CreateAppointmentComponent","constructor","appointmentService","router","onSubmit","saveAppointment","createAppointment","appointment","subscribe","data","console","log","goToAppointmentList","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\FrontEndAngular\\hims\\src\\app\\create-appointment\\create-appointment.component.ts","D:\\FrontEndAngular\\hims\\src\\app\\create-appointment\\create-appointment.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Appointment } from '../appointment'; // Adjust path as per your project structure\nimport { AppointmentService } from '../appointment.service'; // Adjust path as per your project structure\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-appointment',\n  templateUrl: './create-appointment.component.html',\n  styleUrls: ['./create-appointment.component.css']\n})\nexport class CreateAppointmentComponent {\n\n  appointment: Appointment = new Appointment();\n\n  constructor(private appointmentService: AppointmentService, private router: Router) { }\n\n  onSubmit() {\n    this.saveAppointment();\n  }\n\n  saveAppointment() {\n    this.appointmentService.createAppointment(this.appointment).subscribe(data => {\n      console.log(data);\n      this.goToAppointmentList();\n    });\n  }\n\n  goToAppointmentList() {\n    this.router.navigate(['/appointmentlist']);\n  }\n}\n","<div class=\"container\">\n    <h2 class=\"text-center\">Add New Appointment</h2>\n  \n    <form (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label>Patient Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"name\" name=\"name\" [(ngModel)]=\"appointment.name\">\n      </div>\n  \n      <div class=\"form-group\">\n        <label>Doctor Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"doctorName\" name=\"doctorName\" [(ngModel)]=\"appointment.doctorName\">\n      </div>\n  \n      <div class=\"form-group\">\n        <label>Age</label>\n        <input type=\"text\" class=\"form-control\" id=\"age\" name=\"age\" [(ngModel)]=\"appointment.age\">\n      </div>\n  \n      <div class=\"form-group\">\n        <label>Symptoms</label>\n        <input type=\"text\" class=\"form-control\" id=\"symptoms\" name=\"symptoms\" [(ngModel)]=\"appointment.symptoms\">\n      </div>\n  \n      <div class=\"form-group\">\n        <label>Mobile</label>\n        <input type=\"text\" class=\"form-control\" id=\"mobile\" name=\"mobile\" [(ngModel)]=\"appointment.mobile\">\n      </div>\n  \n      <div class=\"form-group\">\n        <label>Appointment Number</label>\n        <input type=\"text\" class=\"form-control\" id=\"appointmentNumber\" name=\"appointmentNumber\" [(ngModel)]=\"appointment.appointmentNumber\">\n      </div>\n  \n      <button class=\"btn btn-success\" type=\"submit\">Submit</button>// I want space between Submit and Reset button and both are center\n      \n      <button class=\"btn btn-success\" type=\"reset\">Reset</button>\n    </form>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}