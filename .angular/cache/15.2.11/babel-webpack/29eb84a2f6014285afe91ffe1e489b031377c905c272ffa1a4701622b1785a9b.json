{"ast":null,"code":"import { Appointment } from '../appointment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../appointment.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction AppointmentComponent_tr_52_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"td\")(22, \"div\", 21)(23, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function AppointmentComponent_tr_52_Template_button_click_23_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const appointment_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.editAppointment(appointment_r1));\n    });\n    i0.ɵɵtext(24, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function AppointmentComponent_tr_52_Template_button_click_25_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const appointment_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.delete(appointment_r1.id));\n    });\n    i0.ɵɵtext(26, \"Delete\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const appointment_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r1.doctorName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r1.age);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r1.symptoms);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r1.mobile);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(15, 9, appointment_r1.registerDate, \"MMMM d, yyyy, h:mm a\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(appointment_r1.updatedDate ? i0.ɵɵpipeBind2(18, 12, appointment_r1.updatedDate, \"MMMM d, yyyy, h:mm a\") : \"-\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(appointment_r1.appointmentNumber);\n  }\n}\nexport class AppointmentComponent {\n  constructor(appointmentService) {\n    this.appointmentService = appointmentService;\n    this.appointments = [];\n    this.appointment = new Appointment(); // This is needed to track the form inputs.\n  }\n\n  ngOnInit() {\n    this.getAppointments();\n  }\n  // Fetch the list of appointments\n  getAppointments() {\n    this.appointmentService.getAllAppointments().subscribe(data => {\n      this.appointments = data;\n    }, error => {\n      console.error(\"Error fetching appointments\", error);\n    });\n  }\n  // Add or update an appointment\n  onSubmit() {\n    if (this.appointment.id === 0) {\n      // Adding a new appointment\n      this.appointment.registerDate = new Date(); // Set the register date on creation\n      this.appointment.updatedDate = null; // No updated date on first creation\n    } else {\n      // Updating an existing appointment\n      this.appointment.updatedDate = new Date(); // Set the updated date\n    }\n\n    this.appointmentService.c(this.appointment).subscribe(() => {\n      this.getAppointments(); // Refresh the list\n      this.clearForm(); // Clear the form after submission\n    }, error => {\n      console.error(\"Error saving appointment\", error);\n    });\n  }\n  // Delete an appointment\n  delete(id) {\n    if (confirm('Are you sure you want to delete this appointment?')) {\n      this.appointmentService.deleteAppointment(id).subscribe(() => {\n        console.log('Deleted appointment with ID:', id);\n        this.getAppointments(); // Refresh the list after deletion\n      }, error => {\n        console.error(\"Error deleting appointment\", error);\n      });\n    }\n  }\n  // Edit an existing appointment\n  editAppointment(appointment) {\n    this.appointment = {\n      ...appointment\n    }; // Create a copy of the appointment for editing\n  }\n  // Clear the form\n  clearForm() {\n    this.appointment = new Appointment(); // Reset the form to a new appointment object\n  }\n  static #_ = this.ɵfac = function AppointmentComponent_Factory(t) {\n    return new (t || AppointmentComponent)(i0.ɵɵdirectiveInject(i1.AppointmentService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppointmentComponent,\n    selectors: [[\"app-appointment\"]],\n    decls: 53,\n    vars: 1,\n    consts: [[1, \"navbar\", \"navbar-expand-lg\", \"bg-dark\"], [\"href\", \"#\", 1, \"navbar-brand\", \"text-white\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#navbarSupportedContent\", \"aria-controls\", \"navbarSupportedContent\", \"aria-expanded\", \"false\", \"aria-label\", \"Toggle navigation\", 1, \"navbar-toggler\"], [1, \"navbar-toggler-icon\"], [\"id\", \"navbarSupportedContent\", 1, \"collapse\", \"navbar-collapse\"], [1, \"navbar-nav\", \"me-auto\", \"mb-2\", \"mb-lg-0\"], [1, \"nav-item\"], [\"href\", \"javascript:void(0);\", \"routerLink\", \"/create-appointment\", 1, \"nav-link\", \"text-white\"], [\"href\", \"javascript:void(0);\", \"routerLink\", \"/admin\", 1, \"nav-link\", \"text-white\"], [1, \"mx-2\"], [1, \"btn\", \"btn-danger\", 2, \"margin\", \"5px\"], [\"href\", \"javascript:void(0);\", \"routerLink\", \"/home\", 1, \"text-white\"], [1, \"container\"], [1, \"text-center\", 2, \"margin-top\", \"20px\"], [\"role\", \"alert\", 1, \"alert\", \"alert-secondary\"], [\"behavior\", \"scroll\", \"direction\", \"left\"], [1, \"text-muted\", \"text-center\"], [1, \"table-responsive\"], [1, \"table\", \"table-striped\"], [1, \"table-dark\"], [4, \"ngFor\", \"ngForOf\"], [1, \"d-flex\", \"justify-content-start\"], [1, \"btn\", \"btn-primary\", \"btn-sm\", \"me-2\", 3, \"click\"], [1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"]],\n    template: function AppointmentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nav\", 0)(1, \"a\", 1);\n        i0.ɵɵtext(2, \"WAGH HOSPITALS\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵelement(4, \"span\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"ul\", 5)(7, \"li\", 6)(8, \"a\", 7);\n        i0.ɵɵtext(9, \"Add Appointment\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"li\", 6)(11, \"a\", 8);\n        i0.ɵɵtext(12, \"Back\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"div\", 9)(14, \"button\", 10)(15, \"a\", 11);\n        i0.ɵɵtext(16, \"Logout\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(17, \"div\", 12);\n        i0.ɵɵelement(18, \"hr\");\n        i0.ɵɵelementStart(19, \"h2\", 13);\n        i0.ɵɵtext(20, \"Appointments Dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 14)(22, \"marquee\", 15);\n        i0.ɵɵtext(23, \" Welcome to the Appointments Dashboard. Please find the patient list below! Click Appointments to view and update Appointments, or Add Appointment to add new appointments. \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(24, \"hr\");\n        i0.ɵɵelementStart(25, \"h3\", 16);\n        i0.ɵɵtext(26, \"Current Appointments List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 17)(28, \"table\", 18)(29, \"thead\", 19)(30, \"tr\")(31, \"th\");\n        i0.ɵɵtext(32, \"Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"th\");\n        i0.ɵɵtext(34, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"th\");\n        i0.ɵɵtext(36, \"Doctor Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"th\");\n        i0.ɵɵtext(38, \"Age\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"th\");\n        i0.ɵɵtext(40, \"Symptoms\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"th\");\n        i0.ɵɵtext(42, \"Mobile\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"th\");\n        i0.ɵɵtext(44, \"Register Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"th\");\n        i0.ɵɵtext(46, \"Updated Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"th\");\n        i0.ɵɵtext(48, \"Appointment Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"th\");\n        i0.ɵɵtext(50, \"Action\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(51, \"tbody\");\n        i0.ɵɵtemplate(52, AppointmentComponent_tr_52_Template, 27, 15, \"tr\", 20);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(52);\n        i0.ɵɵproperty(\"ngForOf\", ctx.appointments);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.RouterLink, i2.DatePipe],\n    styles: [\".table-striped[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-of-type(odd) {\\r\\n    background-color: rgba(0, 0, 0, 0.05);\\r\\n}\\r\\n\\r\\n.table-dark[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\r\\n    background-color: #343a40;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.alert[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 20px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwb2ludG1lbnQvYXBwb2ludG1lbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4QkFBOEI7QUFDOUI7SUFDSSxxQ0FBcUM7QUFDekM7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2QiIsInNvdXJjZXNDb250ZW50IjpbIi8qIGFwcG9pbnRtZW50LmNvbXBvbmVudC5jc3MgKi9cclxuLnRhYmxlLXN0cmlwZWQgdGJvZHkgdHI6bnRoLW9mLXR5cGUob2RkKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMDUpO1xyXG59XHJcblxyXG4udGFibGUtZGFyayB0aCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQzYTQwO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4uYWxlcnQge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Appointment","i0","AppointmentComponent","constructor","appointmentService","ngOnInit","getAppointments","getAllAppointments","subscribe","data","appointments","error","console","onSubmit","appointment","id","registerDate","Date","updatedDate","c","clearForm","delete","confirm","deleteAppointment","log","editAppointment","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\FrontEndAngular\\hims\\src\\app\\appointment\\appointment.component.ts","D:\\FrontEndAngular\\hims\\src\\app\\appointment\\appointment.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AppointmentService } from '../appointment.service';\nimport { Appointment } from '../appointment';\n\n@Component({\n  selector: 'app-appointment',\n  templateUrl: './appointment.component.html',\n  styleUrls: ['./appointment.component.css']\n})\nexport class AppointmentComponent implements OnInit {\n  appointments: Appointment[] = [];\n  appointment: Appointment = new Appointment();  // This is needed to track the form inputs.\n\n  constructor(private appointmentService: AppointmentService) { }\n\n  ngOnInit(): void {\n    this.getAppointments();\n  }\n\n  // Fetch the list of appointments\n  getAppointments(): void {\n    this.appointmentService.getAllAppointments().subscribe(data => {\n      this.appointments = data;\n    }, error => {\n      console.error(\"Error fetching appointments\", error);\n    });\n  }\n\n  // Add or update an appointment\n  onSubmit(): void {\n    if (this.appointment.id === 0) {\n      // Adding a new appointment\n      this.appointment.registerDate = new Date();  // Set the register date on creation\n      this.appointment.updatedDate = null;         // No updated date on first creation\n    } else {\n      // Updating an existing appointment\n      this.appointment.updatedDate = new Date();   // Set the updated date\n    }\n\n    this.appointmentService.c(this.appointment).subscribe(() => {\n      this.getAppointments();  // Refresh the list\n      this.clearForm();        // Clear the form after submission\n    }, error => {\n      console.error(\"Error saving appointment\", error);\n    });\n  }\n\n  // Delete an appointment\n  delete(id: number): void {\n    if (confirm('Are you sure you want to delete this appointment?')) {\n      this.appointmentService.deleteAppointment(id).subscribe(() => {\n        console.log('Deleted appointment with ID:', id);\n        this.getAppointments(); // Refresh the list after deletion\n      }, error => {\n        console.error(\"Error deleting appointment\", error);\n      });\n    }\n  }\n\n  // Edit an existing appointment\n  editAppointment(appointment: Appointment): void {\n    this.appointment = { ...appointment };  // Create a copy of the appointment for editing\n  }\n\n  // Clear the form\n  clearForm(): void {\n    this.appointment = new Appointment();  // Reset the form to a new appointment object\n  }\n}\n","<nav class=\"navbar navbar-expand-lg bg-dark\">\n  <a class=\"navbar-brand text-white\" href=\"#\">WAGH HOSPITALS</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link text-white\" href=\"javascript:void(0);\" routerLink=\"/create-appointment\">Add Appointment</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link text-white\" href=\"javascript:void(0);\" routerLink=\"/admin\">Back</a>\n      </li>\n    </ul>\n    <div class=\"mx-2\">\n      <button class=\"btn btn-danger\" style=\"margin: 5px;\">\n        <a class=\"text-white\" href=\"javascript:void(0);\" routerLink=\"/home\">Logout</a>\n      </button>\n    </div>\n  </div>\n</nav>\n\n<div class=\"container\">\n  <hr>\n  <h2 class=\"text-center\" style=\"margin-top: 20px;\">Appointments Dashboard</h2>\n  <div class=\"alert alert-secondary\" role=\"alert\">\n    <marquee behavior=\"scroll\" direction=\"left\">\n      Welcome to the Appointments Dashboard. Please find the patient list below! Click Appointments to view and update Appointments, or Add Appointment to add new appointments.\n    </marquee>\n  </div>\n  <hr>\n  <h3 class=\"text-muted text-center\">Current Appointments List</h3>\n  <div class=\"table-responsive\">\n    <table class=\"table table-striped\">\n      <thead class=\"table-dark\">\n        <tr>\n          <th>Id</th>\n          <th>Name</th>\n          <th>Doctor Name</th>\n          <th>Age</th>\n          <th>Symptoms</th>\n          <th>Mobile</th>\n          <th>Register Date</th>\n          <th>Updated Date</th>\n          <th>Appointment Number</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let appointment of appointments\">\n          <td>{{ appointment.id }}</td>\n          <td>{{ appointment.name }}</td>\n          <td>{{ appointment.doctorName }}</td>\n          <td>{{ appointment.age }}</td>\n          <td>{{ appointment.symptoms }}</td>\n          <td>{{ appointment.mobile }}</td>\n          <td>{{ appointment.registerDate | date: 'MMMM d, yyyy, h:mm a' }}</td>\n          <td>{{ appointment.updatedDate ? (appointment.updatedDate | date: 'MMMM d, yyyy, h:mm a') : '-' }}</td>\n          <td>{{ appointment.appointmentNumber }}</td>\n          <td>\n            <div class=\"d-flex justify-content-start\">\n              <button class=\"btn btn-primary btn-sm me-2\" (click)=\"editAppointment(appointment)\">Update</button>\n              <button (click)=\"delete(appointment.id)\" class=\"btn btn-danger btn-sm\">Delete</button>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}