{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../appointment.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nfunction AppointmentComponent_tr_47_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"td\")(22, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function AppointmentComponent_tr_47_Template_button_click_22_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const appointment_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.editAppointment(appointment_r1));\n    });\n    i0.ɵɵtext(23, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function AppointmentComponent_tr_47_Template_button_click_24_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const appointment_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.delete(appointment_r1.id));\n    });\n    i0.ɵɵtext(25, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const appointment_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r1.doctorName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r1.age);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r1.symptoms);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r1.mobile);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(15, 9, appointment_r1.registerDate, \"MMMM d, yyyy, h:mm a\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(appointment_r1.updatedDate ? i0.ɵɵpipeBind2(18, 12, appointment_r1.updatedDate, \"MMMM d, yyyy, h:mm a\") : \"-\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(appointment_r1.appointmentNumber);\n  }\n}\nexport class AppointmentComponent {\n  constructor(appointmentService) {\n    this.appointmentService = appointmentService;\n    this.appointments = [];\n  }\n  ngOnInit() {\n    this.getAppointments();\n  }\n  getAppointments() {\n    this.appointmentService.getAllAppointments().subscribe(data => {\n      this.appointments = data;\n    }, error => {\n      console.error(\"Error fetching appointments\", error);\n    });\n  }\n  // Add or update an appointment\n  onSubmit() {\n    if (this.appointment.id === 0) {\n      // Adding a new appointment\n      this.appointment.registerDate = new Date(); // Set the register date on creation\n      this.appointment.updatedDate = null; // No updated date on first creation\n    } else {\n      // Updating an existing appointment\n      this.appointment.updatedDate = new Date(); // Set the updated date\n    }\n\n    this.appointmentService.saveAppointment(this.appointment).subscribe(() => {\n      this.getAppointments(); // Refresh the list\n      this.clearForm(); // Clear the form after submission\n    });\n  }\n\n  delete(id) {\n    if (confirm('Are you sure you want to delete this appointment?')) {\n      this.appointmentService.deleteAppointment(id).subscribe(data => {\n        console.log('Deleted appointment with ID:', id);\n        this.getAppointments(); // Refresh the list after deletion\n      });\n    }\n  }\n  static #_ = this.ɵfac = function AppointmentComponent_Factory(t) {\n    return new (t || AppointmentComponent)(i0.ɵɵdirectiveInject(i1.AppointmentService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppointmentComponent,\n    selectors: [[\"app-appointment\"]],\n    decls: 84,\n    vars: 7,\n    consts: [[1, \"navbar\", \"navbar-expand-lg\", \"bg-dark\"], [\"href\", \"#\", 1, \"navbar-brand\", \"text-white\"], [\"id\", \"navbarSupportedContent\", 1, \"collapse\", \"navbar-collapse\"], [1, \"navbar-nav\", \"me-auto\", \"mb-2\", \"mb-lg-0\"], [1, \"nav-item\"], [\"href\", \"javascript:void(0);\", \"routerLink\", \"/create-appointment\", 1, \"nav-link\", \"text-white\"], [\"href\", \"javascript:void(0);\", \"routerLink\", \"/admin\", 1, \"nav-link\", \"text-white\"], [1, \"mx-2\"], [1, \"btn\", \"btn-danger\"], [\"href\", \"javascript:void(0);\", \"routerLink\", \"/home\", 1, \"text-white\"], [1, \"container\"], [1, \"text-center\"], [1, \"text-muted\", \"text-center\"], [1, \"table-responsive\"], [1, \"table\", \"table-striped\"], [1, \"table-dark\"], [4, \"ngFor\", \"ngForOf\"], [1, \"container\", \"mt-4\"], [3, \"ngSubmit\"], [1, \"row\", \"mb-3\"], [1, \"col-md-6\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"doctorName\"], [\"type\", \"text\", \"id\", \"doctorName\", \"name\", \"doctorName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"age\"], [\"type\", \"number\", \"id\", \"age\", \"name\", \"age\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"mobile\"], [\"type\", \"tel\", \"id\", \"mobile\", \"name\", \"mobile\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-group\", \"mb-3\"], [\"for\", \"symptoms\"], [\"type\", \"text\", \"id\", \"symptoms\", \"name\", \"symptoms\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"appointmentNumber\"], [\"type\", \"text\", \"id\", \"appointmentNumber\", \"name\", \"appointmentNumber\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"btn\", \"btn-primary\", \"btn-sm\", \"me-2\", 3, \"click\"], [1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"]],\n    template: function AppointmentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nav\", 0)(1, \"a\", 1);\n        i0.ɵɵtext(2, \"WAGH HOSPITALS\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"ul\", 3)(5, \"li\", 4)(6, \"a\", 5);\n        i0.ɵɵtext(7, \"Add Appointment\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"li\", 4)(9, \"a\", 6);\n        i0.ɵɵtext(10, \"Back\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 7)(12, \"button\", 8)(13, \"a\", 9);\n        i0.ɵɵtext(14, \"Logout\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(15, \"div\", 10);\n        i0.ɵɵelement(16, \"hr\");\n        i0.ɵɵelementStart(17, \"h2\", 11);\n        i0.ɵɵtext(18, \"Appointments Dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"hr\");\n        i0.ɵɵelementStart(20, \"h3\", 12);\n        i0.ɵɵtext(21, \"Current Appointments List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 13)(23, \"table\", 14)(24, \"thead\", 15)(25, \"tr\")(26, \"th\");\n        i0.ɵɵtext(27, \"Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"th\");\n        i0.ɵɵtext(29, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"th\");\n        i0.ɵɵtext(31, \"Doctor Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"th\");\n        i0.ɵɵtext(33, \"Age\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"th\");\n        i0.ɵɵtext(35, \"Symptoms\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"th\");\n        i0.ɵɵtext(37, \"Mobile\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"th\");\n        i0.ɵɵtext(39, \"Register Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"th\");\n        i0.ɵɵtext(41, \"Updated Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"th\");\n        i0.ɵɵtext(43, \"Appointment Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"th\");\n        i0.ɵɵtext(45, \"Action\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(46, \"tbody\");\n        i0.ɵɵtemplate(47, AppointmentComponent_tr_47_Template, 26, 15, \"tr\", 16);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(48, \"div\", 17)(49, \"h2\", 11);\n        i0.ɵɵtext(50, \"Add or Update Appointment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"form\", 18);\n        i0.ɵɵlistener(\"ngSubmit\", function AppointmentComponent_Template_form_ngSubmit_51_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(52, \"div\", 19)(53, \"div\", 20)(54, \"div\", 21)(55, \"label\", 22);\n        i0.ɵɵtext(56, \"Patient Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"input\", 23);\n        i0.ɵɵlistener(\"ngModelChange\", function AppointmentComponent_Template_input_ngModelChange_57_listener($event) {\n          return ctx.appointment.name = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(58, \"div\", 20)(59, \"div\", 21)(60, \"label\", 24);\n        i0.ɵɵtext(61, \"Doctor Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"input\", 25);\n        i0.ɵɵlistener(\"ngModelChange\", function AppointmentComponent_Template_input_ngModelChange_62_listener($event) {\n          return ctx.appointment.doctorName = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(63, \"div\", 19)(64, \"div\", 20)(65, \"div\", 21)(66, \"label\", 26);\n        i0.ɵɵtext(67, \"Age\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"input\", 27);\n        i0.ɵɵlistener(\"ngModelChange\", function AppointmentComponent_Template_input_ngModelChange_68_listener($event) {\n          return ctx.appointment.age = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(69, \"div\", 20)(70, \"div\", 21)(71, \"label\", 28);\n        i0.ɵɵtext(72, \"Mobile\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(73, \"input\", 29);\n        i0.ɵɵlistener(\"ngModelChange\", function AppointmentComponent_Template_input_ngModelChange_73_listener($event) {\n          return ctx.appointment.mobile = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(74, \"div\", 30)(75, \"label\", 31);\n        i0.ɵɵtext(76, \"Symptoms\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(77, \"input\", 32);\n        i0.ɵɵlistener(\"ngModelChange\", function AppointmentComponent_Template_input_ngModelChange_77_listener($event) {\n          return ctx.appointment.symptoms = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(78, \"div\", 30)(79, \"label\", 33);\n        i0.ɵɵtext(80, \"Appointment Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(81, \"input\", 34);\n        i0.ɵɵlistener(\"ngModelChange\", function AppointmentComponent_Template_input_ngModelChange_81_listener($event) {\n          return ctx.appointment.appointmentNumber = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(82, \"button\", 35);\n        i0.ɵɵtext(83, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(47);\n        i0.ɵɵproperty(\"ngForOf\", ctx.appointments);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.appointment.name);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.appointment.doctorName);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.appointment.age);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.appointment.mobile);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.appointment.symptoms);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.appointment.appointmentNumber);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i2.DatePipe],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","AppointmentComponent","constructor","appointmentService","ngOnInit","getAppointments","getAllAppointments","subscribe","data","appointments","error","console","onSubmit","appointment","id","registerDate","Date","updatedDate","saveAppointment","clearForm","delete","confirm","deleteAppointment","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\FrontEndAngular\\hims\\src\\app\\appointment\\appointment.component.html","D:\\FrontEndAngular\\hims\\src\\app\\appointment\\appointment.component.ts"],"sourcesContent":["<!-- appointment.component.html -->\n<nav class=\"navbar navbar-expand-lg bg-dark\">\n  <a class=\"navbar-brand text-white\" href=\"#\">WAGH HOSPITALS</a>\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link text-white\" href=\"javascript:void(0);\" routerLink=\"/create-appointment\">Add Appointment</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link text-white\" href=\"javascript:void(0);\" routerLink=\"/admin\">Back</a>\n      </li>\n    </ul>\n    <div class=\"mx-2\">\n      <button class=\"btn btn-danger\">\n        <a class=\"text-white\" href=\"javascript:void(0);\" routerLink=\"/home\">Logout</a>\n      </button>\n    </div>\n  </div>\n</nav>\n\n<div class=\"container\">\n  <hr>\n  <h2 class=\"text-center\">Appointments Dashboard</h2>\n  <hr>\n  <h3 class=\"text-muted text-center\">Current Appointments List</h3>\n  <div class=\"table-responsive\">\n    <table class=\"table table-striped\">\n      <thead class=\"table-dark\">\n        <tr>\n          <th>Id</th>\n          <th>Name</th>\n          <th>Doctor Name</th>\n          <th>Age</th>\n          <th>Symptoms</th>\n          <th>Mobile</th>\n          <th>Register Date</th>\n          <th>Updated Date</th>\n          <th>Appointment Number</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let appointment of appointments\">\n          <td>{{ appointment.id }}</td>\n          <td>{{ appointment.name }}</td>\n          <td>{{ appointment.doctorName }}</td>\n          <td>{{ appointment.age }}</td>\n          <td>{{ appointment.symptoms }}</td>\n          <td>{{ appointment.mobile }}</td>\n          <td>{{ appointment.registerDate | date: 'MMMM d, yyyy, h:mm a' }}</td>\n          <td>{{ appointment.updatedDate ? (appointment.updatedDate | date: 'MMMM d, yyyy, h:mm a') : '-' }}</td>\n          <td>{{ appointment.appointmentNumber }}</td>\n          <td>\n            <button class=\"btn btn-primary btn-sm me-2\" (click)=\"editAppointment(appointment)\">Update</button>\n            <button class=\"btn btn-danger btn-sm\" (click)=\"delete(appointment.id)\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n\n<div class=\"container mt-4\">\n  <h2 class=\"text-center\">Add or Update Appointment</h2>\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"row mb-3\">\n      <div class=\"col-md-6\">\n        <div class=\"form-group\">\n          <label for=\"name\">Patient Name</label>\n          <input type=\"text\" class=\"form-control\" id=\"name\" [(ngModel)]=\"appointment.name\" name=\"name\" required>\n        </div>\n      </div>\n      <div class=\"col-md-6\">\n        <div class=\"form-group\">\n          <label for=\"doctorName\">Doctor Name</label>\n          <input type=\"text\" class=\"form-control\" id=\"doctorName\" [(ngModel)]=\"appointment.doctorName\" name=\"doctorName\" required>\n        </div>\n      </div>\n    </div>\n    <div class=\"row mb-3\">\n      <div class=\"col-md-6\">\n        <div class=\"form-group\">\n          <label for=\"age\">Age</label>\n          <input type=\"number\" class=\"form-control\" id=\"age\" [(ngModel)]=\"appointment.age\" name=\"age\" required>\n        </div>\n      </div>\n      <div class=\"col-md-6\">\n        <div class=\"form-group\">\n          <label for=\"mobile\">Mobile</label>\n          <input type=\"tel\" class=\"form-control\" id=\"mobile\" [(ngModel)]=\"appointment.mobile\" name=\"mobile\" required>\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group mb-3\">\n      <label for=\"symptoms\">Symptoms</label>\n      <input type=\"text\" class=\"form-control\" id=\"symptoms\" [(ngModel)]=\"appointment.symptoms\" name=\"symptoms\" required>\n    </div>\n    <div class=\"form-group mb-3\">\n      <label for=\"appointmentNumber\">Appointment Number</label>\n      <input type=\"text\" class=\"form-control\" id=\"appointmentNumber\" [(ngModel)]=\"appointment.appointmentNumber\" name=\"appointmentNumber\" required>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AppointmentService } from '../appointment.service';\nimport { Appointment } from '../appointment';\n\n@Component({\n  selector: 'app-appointment',\n  templateUrl: './appointment.component.html',\n  styleUrls: ['./appointment.component.css']\n})\nexport class AppointmentComponent implements OnInit {\n  appointments: Appointment[] = [];\n\n  constructor(private appointmentService: AppointmentService) { }\n\n  ngOnInit(): void {\n    this.getAppointments();\n  }\n\n  getAppointments(): void {\n    this.appointmentService.getAllAppointments().subscribe(data => {\n      this.appointments = data;\n    }, error => {\n      console.error(\"Error fetching appointments\", error);\n    });\n  }\n\n  // Add or update an appointment\n  onSubmit() {\n    if (this.appointment.id === 0) {\n      // Adding a new appointment\n      this.appointment.registerDate = new Date();  // Set the register date on creation\n      this.appointment.updatedDate = null;         // No updated date on first creation\n    } else {\n      // Updating an existing appointment\n      this.appointment.updatedDate = new Date();   // Set the updated date\n    }\n\n    this.appointmentService.saveAppointment(this.appointment).subscribe(() => {\n      this.getAppointments();  // Refresh the list\n      this.clearForm();        // Clear the form after submission\n    });\n  }\n  delete(id: number){\n    if (confirm('Are you sure you want to delete this appointment?')) {\n      this.appointmentService.deleteAppointment(id).subscribe(data => {\n        console.log('Deleted appointment with ID:', id);\n        this.getAppointments(); // Refresh the list after deletion\n      })\n    }\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}