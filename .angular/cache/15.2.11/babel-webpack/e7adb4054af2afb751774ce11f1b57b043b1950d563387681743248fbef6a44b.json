{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../appointment.service\";\nimport * as i2 from \"@angular/common\";\nfunction AppointmentComponent_tr_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"td\")(22, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function AppointmentComponent_tr_35_Template_button_click_22_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const appointment_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.delete(appointment_r1.aId));\n    });\n    i0.ɵɵtext(23, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const appointment_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r1.aId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r1.doctorName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r1.age);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r1.symptoms);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r1.mobile);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(15, 9, appointment_r1.registerDate, \"MMMM d, yyyy, h:mm a\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(18, 12, appointment_r1.updatedDate, \"MMMM d, yyyy, h:mm a\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(appointment_r1.appointmentNumber);\n  }\n}\nexport class AppointmentComponent {\n  constructor(appointmentService) {\n    this.appointmentService = appointmentService;\n    this.appointments = [];\n  }\n  ngOnInit() {\n    this.getAppointments();\n  }\n  getAppointments() {\n    this.appointmentService.getAllAppointments().subscribe(data => {\n      this.appointments = data;\n    });\n  }\n  delete(aId) {\n    this.appointmentService.deleteAppointment(aId).subscribe(data => {\n      console.log(data);\n      this.getAppointments();\n    });\n  }\n  static #_ = this.ɵfac = function AppointmentComponent_Factory(t) {\n    return new (t || AppointmentComponent)(i0.ɵɵdirectiveInject(i1.AppointmentService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppointmentComponent,\n    selectors: [[\"app-appointment\"]],\n    decls: 36,\n    vars: 1,\n    consts: [[1, \"container\"], [1, \"text-center\", 2, \"margin-top\", \"20px\"], [\"role\", \"alert\", 1, \"alert\", \"alert-secondary\"], [\"behavior\", \"scroll\", \"direction\", \"left\"], [1, \"text-muted\"], [1, \"tableFixHead\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function AppointmentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"hr\");\n        i0.ɵɵelementStart(2, \"h2\", 1);\n        i0.ɵɵtext(3, \"Appointments Dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"marquee\", 3);\n        i0.ɵɵtext(6, \" Welcome to the Appointments Dashboard. Please find the patient list below! Click Appointments to view and update Appointments, or Add Appointment to add new appointments. \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(7, \"hr\");\n        i0.ɵɵelementStart(8, \"h3\", 4);\n        i0.ɵɵtext(9, \"Current Appointments List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 5)(11, \"table\", 6)(12, \"thead\")(13, \"tr\")(14, \"th\");\n        i0.ɵɵtext(15, \"Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"th\");\n        i0.ɵɵtext(17, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"th\");\n        i0.ɵɵtext(19, \"Doctor Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"th\");\n        i0.ɵɵtext(21, \"Age\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"th\");\n        i0.ɵɵtext(23, \"Symptoms\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"th\");\n        i0.ɵɵtext(25, \"Mobile\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"th\");\n        i0.ɵɵtext(27, \"Register Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"th\");\n        i0.ɵɵtext(29, \"Updated Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"th\");\n        i0.ɵɵtext(31, \"Appointment Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"th\");\n        i0.ɵɵtext(33, \"Action\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(34, \"tbody\");\n        i0.ɵɵtemplate(35, AppointmentComponent_tr_35_Template, 24, 15, \"tr\", 7);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(35);\n        i0.ɵɵproperty(\"ngForOf\", ctx.appointments);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.DatePipe],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;IA2BQA,0BAA6C;IACvCA,YAAqB;IAAAA,iBAAK;IAC9BA,0BAAI;IAAAA,YAAsB;IAAAA,iBAAK;IAC/BA,0BAAI;IAAAA,YAA4B;IAAAA,iBAAK;IACrCA,0BAAI;IAAAA,YAAqB;IAAAA,iBAAK;IAC9BA,0BAAI;IAAAA,aAA0B;IAAAA,iBAAK;IACnCA,2BAAI;IAAAA,aAAwB;IAAAA,iBAAK;IACjCA,2BAAI;IAAAA,aAA6D;;IAAAA,iBAAK;IACtEA,2BAAI;IAAAA,aAA4D;;IAAAA,iBAAK;IACrEA,2BAAI;IAAAA,aAAmC;IAAAA,iBAAK;IAC5CA,2BAAI;IACMA;MAAA;MAAA;MAAA;MAAA,OAASA,gDAAuB;IAAA,EAAC;IAAwBA,uBAAM;IAAAA,iBAAS;;;;IAV9EA,eAAqB;IAArBA,wCAAqB;IACrBA,eAAsB;IAAtBA,yCAAsB;IACtBA,eAA4B;IAA5BA,+CAA4B;IAC5BA,eAAqB;IAArBA,wCAAqB;IACrBA,eAA0B;IAA1BA,6CAA0B;IAC1BA,eAAwB;IAAxBA,2CAAwB;IACxBA,eAA6D;IAA7DA,gGAA6D;IAC7DA,eAA4D;IAA5DA,gGAA4D;IAC5DA,eAAmC;IAAnCA,sDAAmC;;;AC3BjD,OAAM,MAAOC,oBAAoB;EAGjCC,YAAoBC,kBAAsC;IAAtC,uBAAkB,GAAlBA,kBAAkB;IADpC,iBAAY,GAAe,EAAE;EAC+B;EAE9DC,QAAQ;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EACAA,eAAe;IACb,IAAI,CAACF,kBAAkB,CAACG,kBAAkB,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC5D,IAAI,CAACC,YAAY,GAAGD,IAAI;IAC1B,CAAC,CAAC;EACJ;EACAE,MAAM,CAACC,GAAU;IACjB,IAAI,CAACR,kBAAkB,CAACS,iBAAiB,CAACD,GAAG,CAAC,CAACJ,SAAS,CACtDC,IAAI,IAAE;MACJK,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;MACjB,IAAI,CAACH,eAAe,EAAE;IAC1B,CAAC,CAAC;EACF;EAAC;qBAnBYJ,oBAAoB;EAAA;EAAA;UAApBA,oBAAoB;IAAAc;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDTjCnB,8BAAuB;QACrBA,qBAAI;QACJA,6BAAkD;QAAAA,sCAAsB;QAAAA,iBAAK;QAC7EA,8BAAgD;QAE5CA,4LACF;QAAAA,iBAAU;QAEZA,qBAAI;QACJA,6BAAuB;QAAAA,yCAAyB;QAAAA,iBAAK;QACrDA,+BAA0B;QAIdA,mBAAE;QAAAA,iBAAK;QACXA,2BAAI;QAAAA,qBAAI;QAAAA,iBAAK;QACbA,2BAAI;QAAAA,4BAAW;QAAAA,iBAAK;QACpBA,2BAAI;QAAAA,oBAAG;QAAAA,iBAAK;QACZA,2BAAI;QAAAA,yBAAQ;QAAAA,iBAAK;QACjBA,2BAAI;QAAAA,uBAAM;QAAAA,iBAAK;QACfA,2BAAI;QAAAA,8BAAa;QAAAA,iBAAK;QACtBA,2BAAI;QAAAA,6BAAY;QAAAA,iBAAK;QACrBA,2BAAI;QAAAA,mCAAkB;QAAAA,iBAAK;QAC3BA,2BAAI;QAAAA,uBAAM;QAAAA,iBAAK;QAGnBA,8BAAO;QACLA,uEAaK;QACPA,iBAAQ;;;QAdsBA,gBAAe;QAAfA,0CAAe","names":["i0","AppointmentComponent","constructor","appointmentService","ngOnInit","getAppointments","getAllAppointments","subscribe","data","appointments","delete","aId","deleteAppointment","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\FrontEndAngular\\hims\\src\\app\\appointment\\appointment.component.html","D:\\FrontEndAngular\\hims\\src\\app\\appointment\\appointment.component.ts"],"sourcesContent":["<div class=\"container\">\n  <hr>\n  <h2 class=\"text-center\" style=\"margin-top: 20px;\">Appointments Dashboard</h2>\n  <div class=\"alert alert-secondary\" role=\"alert\">\n    <marquee behavior=\"scroll\" direction=\"left\">\n      Welcome to the Appointments Dashboard. Please find the patient list below! Click Appointments to view and update Appointments, or Add Appointment to add new appointments.\n    </marquee>\n  </div>\n  <hr>\n  <h3 class=\"text-muted\">Current Appointments List</h3>\n  <div class=\"tableFixHead\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Id</th>\n          <th>Name</th>\n          <th>Doctor Name</th>\n          <th>Age</th>\n          <th>Symptoms</th>\n          <th>Mobile</th>\n          <th>Register Date</th>\n          <th>Updated Date</th>\n          <th>Appointment Number</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let appointment of appointments\">\n          <td>{{ appointment.aId }}</td>\n          <td>{{ appointment.name }}</td>\n          <td>{{ appointment.doctorName }}</td>\n          <td>{{ appointment.age }}</td>\n          <td>{{ appointment.symptoms }}</td>\n          <td>{{ appointment.mobile }}</td>\n          <td>{{ appointment.registerDate | date: 'MMMM d, yyyy, h:mm a' }}</td>\n          <td>{{ appointment.updatedDate | date: 'MMMM d, yyyy, h:mm a' }}</td>\n          <td>{{ appointment.appointmentNumber }}</td>\n          <td>\n            <button (click)=\"delete(appointment.aId)\" class=\"btn btn-danger\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { AppointmentService } from '../appointment.service';\nimport { Appointment } from '../appointment';\n\n@Component({\n  selector: 'app-appointment',\n  templateUrl: './appointment.component.html',\n  styleUrls: ['./appointment.component.css']\n})\nexport class AppointmentComponent {\n\n  appointments:Appointment[]=[];\nconstructor(private appointmentService: AppointmentService) { }\n\nngOnInit():void {\n  this.getAppointments();\n}\ngetAppointments() {\n  this.appointmentService.getAllAppointments().subscribe(data => {\n    this.appointments = data;\n  })\n}\ndelete(aId:number){\nthis.appointmentService.deleteAppointment(aId).subscribe(\n  data=>{\n    console.log(data);\n    this.getAppointments();\n});\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}