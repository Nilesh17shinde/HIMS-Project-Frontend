{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../patient.service\";\nexport class AdmindashComponent {\n  constructor(patientService) {\n    this.patientService = patientService;\n  }\n  getPatientList() {\n    this.patientService.getPatientList().subscribe(data => {\n      console.log(data);\n    });\n  }\n  static #_ = this.ɵfac = function AdmindashComponent_Factory(t) {\n    return new (t || AdmindashComponent)(i0.ɵɵdirectiveInject(i1.PatientService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdmindashComponent,\n    selectors: [[\"app-admindash\"]],\n    decls: 2,\n    vars: 0,\n    template: function AdmindashComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"admindash works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,kBAAkB;EAG7BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;EAAoB;EACtDC,cAAc;IACZ,IAAI,CAACD,cAAc,CAACC,cAAc,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACpDC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC;EACJ;EAAC;qBARUL,kBAAkB;EAAA;EAAA;UAAlBA,kBAAkB;IAAAQ;IAAAC;IAAAC;IAAAC;MAAA;QCR/BC,yBAAG;QAAAA,gCAAgB;QAAAA,iBAAI","names":["AdmindashComponent","constructor","patientService","getPatientList","subscribe","data","console","log","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["D:\\FrontEndAngular\\hims\\src\\app\\admindash\\admindash.component.ts","D:\\FrontEndAngular\\hims\\src\\app\\admindash\\admindash.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { PatientService } from '../patient.service';\n\n@Component({\n  selector: 'app-admindash',\n  templateUrl: './admindash.component.html',\n  styleUrls: ['./admindash.component.css']\n})\nexport class AdmindashComponent {\n\n  patient\n  constructor(private patientService: PatientService) { }\n  getPatientList() {\n    this.patientService.getPatientList().subscribe(data => {\n      console.log(data)\n    })\n  }\n}\n","<p>admindash works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}