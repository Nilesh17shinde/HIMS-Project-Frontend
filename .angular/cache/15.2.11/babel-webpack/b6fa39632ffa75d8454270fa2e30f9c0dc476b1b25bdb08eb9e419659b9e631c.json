{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../patient.service\";\nimport * as i2 from \"@angular/common\";\nfunction AdmindashComponent_tr_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\")(20, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function AdmindashComponent_tr_33_Template_button_click_20_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const patient_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.delete(patient_r1.id));\n    });\n    i0.ɵɵtext(21, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const patient_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.age);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.mobile);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.fees);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.urgency);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(15, 8, patient_r1.registerDate, \"d MMMM, yyyy, h:mm a\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(18, 11, patient_r1.updatedDate, \"d MMMM, yyyy, h:mm a\"));\n  }\n}\nexport class AdmindashComponent {\n  constructor(patientService) {\n    this.patientService = patientService;\n    this.patients = [];\n  }\n  ngOnInit() {\n    this.getPatientList();\n  }\n  getPatientList() {\n    this.patientService.getPatientList().subscribe(data => {\n      this.patients = data;\n    });\n  }\n  delete(id) {\n    if (confirm('Are you sure you want to delete this patient?')) {\n      this.patientService.deletePatient(id).subscribe(data => {\n        console.log('Deleted patient with ID:', id);\n        this.getPatientList(); // Refresh the list after deletion\n      });\n    }\n  }\n  static #_ = this.ɵfac = function AdmindashComponent_Factory(t) {\n    return new (t || AdmindashComponent)(i0.ɵɵdirectiveInject(i1.PatientService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdmindashComponent,\n    selectors: [[\"app-admindash\"]],\n    decls: 34,\n    vars: 1,\n    consts: [[1, \"container\"], [1, \"text-center\", 2, \"margin-top\", \"20px\"], [\"role\", \"alert\", 1, \"alert\", \"alert-secondary\"], [\"behavior\", \"scroll\", \"direction\", \"left\"], [1, \"text-center\", \"text-muted\"], [1, \"table-responsive\"], [1, \"table\", \"table-striped\", \"table-bordered\"], [1, \"table-dark\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"]],\n    template: function AdmindashComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"hr\");\n        i0.ɵɵelementStart(2, \"h2\", 1);\n        i0.ɵɵtext(3, \"Admin Dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"marquee\", 3);\n        i0.ɵɵtext(6, \" Welcome to Admin Dashboard. Please find the patient list below! Click Appointments to view and update Appointments, Click Add Appointment to add a new Appointment. \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(7, \"hr\");\n        i0.ɵɵelementStart(8, \"h3\", 4);\n        i0.ɵɵtext(9, \"Current Patient List in the Queue\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 5)(11, \"table\", 6)(12, \"thead\", 7)(13, \"tr\")(14, \"th\");\n        i0.ɵɵtext(15, \"Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"th\");\n        i0.ɵɵtext(17, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"th\");\n        i0.ɵɵtext(19, \"Age\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"th\");\n        i0.ɵɵtext(21, \"Mobile\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"th\");\n        i0.ɵɵtext(23, \"Fees\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"th\");\n        i0.ɵɵtext(25, \"Urgency\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"th\");\n        i0.ɵɵtext(27, \"Register Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"th\");\n        i0.ɵɵtext(29, \"Updated Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"th\");\n        i0.ɵɵtext(31, \"Action\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(32, \"tbody\");\n        i0.ɵɵtemplate(33, AdmindashComponent_tr_33_Template, 22, 14, \"tr\", 8);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(33);\n        i0.ɵɵproperty(\"ngForOf\", ctx.patients);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.DatePipe],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;IAgCUA,0BAAqC;IAC/BA,YAAgB;IAAAA,iBAAK;IACzBA,0BAAI;IAAAA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAAAA,YAAiB;IAAAA,iBAAK;IAC1BA,0BAAI;IAAAA,YAAoB;IAAAA,iBAAK;IAI7BA,0BAAI;IAAAA,aAAkB;IAAAA,iBAAK;IAC3BA,2BAAI;IAAAA,aAAqB;IAAAA,iBAAK;IAC9BA,2BAAI;IAAAA,aAAyD;;IAAAA,iBAAK;IAClEA,2BAAI;IAAAA,aAAwD;;IAAAA,iBAAK;IACjEA,2BAAI;IACMA;MAAA;MAAA;MAAA;MAAA,OAASA,2CAAkB;IAAA,EAAC;IAA+BA,uBAAM;IAAAA,iBAAS;;;;IAZhFA,eAAgB;IAAhBA,mCAAgB;IAChBA,eAAkB;IAAlBA,qCAAkB;IAClBA,eAAiB;IAAjBA,oCAAiB;IACjBA,eAAoB;IAApBA,uCAAoB;IAIpBA,eAAkB;IAAlBA,qCAAkB;IAClBA,eAAqB;IAArBA,wCAAqB;IACrBA,eAAyD;IAAzDA,4FAAyD;IACzDA,eAAwD;IAAxDA,4FAAwD;;;AClCxE,OAAM,MAAOC,kBAAkB;EAG7BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAFlC,aAAQ,GAAc,EAAE;EAE8B;EAEtDC,QAAQ;IACN,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAc;IACZ,IAAI,CAACF,cAAc,CAACE,cAAc,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACpD,IAAI,CAACC,QAAQ,GAAGD,IAAI;IACtB,CAAC,CAAC;EACJ;EAEAE,MAAM,CAACC,EAAU;IACf,IAAIC,OAAO,CAAC,+CAA+C,CAAC,EAAE;MAC5D,IAAI,CAACR,cAAc,CAACS,aAAa,CAACF,EAAE,CAAC,CAACJ,SAAS,CAACC,IAAI,IAAG;QACrDM,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEJ,EAAE,CAAC;QAC3C,IAAI,CAACL,cAAc,EAAE,CAAC,CAAC;MACzB,CAAC,CAAC;;EAEN;EAAC;qBAtBUJ,kBAAkB;EAAA;EAAA;UAAlBA,kBAAkB;IAAAc;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDR7BnB,8BAAuB;QACrBA,qBAAI;QACJA,6BAAkD;QAAAA,+BAAe;QAAAA,iBAAK;QACtEA,8BAAgD;QAE5CA,qLACF;QAAAA,iBAAU;QAEZA,qBAAI;QAEJA,6BAAmC;QAAAA,iDAAiC;QAAAA,iBAAK;QAEzEA,+BAA8B;QAIlBA,mBAAE;QAAAA,iBAAK;QACXA,2BAAI;QAAAA,qBAAI;QAAAA,iBAAK;QACbA,2BAAI;QAAAA,oBAAG;QAAAA,iBAAK;QACZA,2BAAI;QAAAA,uBAAM;QAAAA,iBAAK;QAIfA,2BAAI;QAAAA,qBAAI;QAAAA,iBAAK;QACbA,2BAAI;QAAAA,wBAAO;QAAAA,iBAAK;QAChBA,2BAAI;QAAAA,8BAAa;QAAAA,iBAAK;QACtBA,2BAAI;QAAAA,6BAAY;QAAAA,iBAAK;QACrBA,2BAAI;QAAAA,uBAAM;QAAAA,iBAAK;QAGnBA,8BAAO;QACLA,qEAeK;QACPA,iBAAQ;;;QAhBkBA,gBAAW;QAAXA,sCAAW","names":["i0","AdmindashComponent","constructor","patientService","ngOnInit","getPatientList","subscribe","data","patients","delete","id","confirm","deletePatient","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\FrontEndAngular\\hims\\src\\app\\admindash\\admindash.component.html","D:\\FrontEndAngular\\hims\\src\\app\\admindash\\admindash.component.ts"],"sourcesContent":["  \n  <div class=\"container\">\n    <hr>\n    <h2 class=\"text-center\" style=\"margin-top: 20px;\">Admin Dashboard</h2>\n    <div class=\"alert alert-secondary\" role=\"alert\">\n      <marquee behavior=\"scroll\" direction=\"left\">\n        Welcome to Admin Dashboard. Please find the patient list below! Click Appointments to view and update Appointments, Click Add Appointment to add a new Appointment.\n      </marquee>\n    </div>\n    <hr>\n  \n    <h3 class=\"text-center text-muted\">Current Patient List in the Queue</h3>\n    \n    <div class=\"table-responsive\">\n      <table class=\"table table-striped table-bordered\">\n        <thead class=\"table-dark\">\n          <tr>\n            <th>Id</th>\n            <th>Name</th>\n            <th>Age</th>\n            <th>Mobile</th>\n            <!-- <th>Blood</th>\n            <th>Prescription</th>\n            <th>Dose</th> -->\n            <th>Fees</th>\n            <th>Urgency</th>\n            <th>Register Date</th>\n            <th>Updated Date</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let patient of patients\">\n            <td>{{ patient.id }}</td>\n            <td>{{ patient.name }}</td>\n            <td>{{ patient.age }}</td>\n            <td>{{ patient.mobile }}</td>\n             <!-- <td>{{ patient.blood }}</td>\n             <td>{{ patient.prescription }}</td>\n             <td>{{ patient.dose }}</td> -->\n            <td>{{ patient.fees }}</td>\n            <td>{{ patient.urgency }}</td>\n            <td>{{ patient.registerDate | date: 'd MMMM, yyyy, h:mm a' }}</td>\n            <td>{{ patient.updatedDate | date: 'd MMMM, yyyy, h:mm a' }}</td>\n            <td>\n              <button (click)=\"delete(patient.id)\" class=\"btn btn-danger btn-sm\">Delete</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { PatientService } from '../patient.service';\nimport { Patient } from '../patient';\n\n@Component({\n  selector: 'app-admindash',\n  templateUrl: './admindash.component.html',\n  styleUrls: ['./admindash.component.css']\n})\nexport class AdmindashComponent implements OnInit {\n  patients: Patient[] = [];\n\n  constructor(private patientService: PatientService) { }\n\n  ngOnInit(): void {\n    this.getPatientList();\n  }\n\n  getPatientList() {\n    this.patientService.getPatientList().subscribe(data => {\n      this.patients = data;\n    });\n  }\n\n  delete(id: number) {\n    if (confirm('Are you sure you want to delete this patient?')) {\n      this.patientService.deletePatient(id).subscribe(data => {\n        console.log('Deleted patient with ID:', id);\n        this.getPatientList(); // Refresh the list after deletion\n      })\n    }\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}