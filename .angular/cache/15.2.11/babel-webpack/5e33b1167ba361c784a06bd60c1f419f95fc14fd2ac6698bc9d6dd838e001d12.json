{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../medicine.service\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = function (a0, a1) {\n  return {\n    \"table-warning\": a0,\n    \"table-success\": a1\n  };\n};\nconst _c1 = function (a0, a1) {\n  return {\n    \"text-danger\": a0,\n    \"text-success\": a1\n  };\n};\nfunction MedicinelistComponent_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 4)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"span\", 4);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\")(17, \"button\", 5);\n    i0.ɵɵelement(18, \"i\", 6);\n    i0.ɵɵtext(19, \" Update \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 7);\n    i0.ɵɵelement(21, \"i\", 8);\n    i0.ɵɵtext(22, \" Delete \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const medicine_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(14, _c0, ctx_r0.medicines.stock < 10, medicine_r1.stock >= 10));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(medicine_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(medicine_r1.drugsName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(17, _c1, medicine_r1.stock < 10, medicine_r1.stock >= 10));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", medicine_r1.stock, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(10, 8, medicine_r1.registerDate, \"d MMMM, yyyy, h:mm a\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(medicine_r1.updatedDate ? i0.ɵɵpipeBind2(13, 11, medicine_r1.updatedDate, \"MMMM d, yyyy, h:mm a\") : \"-\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(medicine_r1.medicineId);\n  }\n}\nexport class MedicinelistComponent {\n  constructor(medicineService) {\n    this.medicineService = medicineService;\n    this.medicines = [];\n  }\n  ngOnInit() {\n    this.getMedicines();\n  }\n  getMedicines() {\n    this.medicineService.getMedicines().subscribe(data => {\n      this.medicines = data;\n    });\n  }\n  static #_ = this.ɵfac = function MedicinelistComponent_Factory(t) {\n    return new (t || MedicinelistComponent)(i0.ɵɵdirectiveInject(i1.MedicineService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MedicinelistComponent,\n    selectors: [[\"app-medicinelist\"]],\n    decls: 19,\n    vars: 1,\n    consts: [[1, \"table\", \"table-striped\", \"table-bordered\", \"table-hover\", \"align-middle\"], [1, \"table-dark\"], [\"scope\", \"col\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [\"data-bs-toggle\", \"tooltip\", \"data-bs-placement\", \"top\", \"title\", \"Update this medicine\", 1, \"btn\", \"btn-outline-primary\", \"btn-sm\", \"me-2\"], [1, \"fas\", \"fa-edit\"], [\"data-bs-toggle\", \"tooltip\", \"data-bs-placement\", \"top\", \"title\", \"Delete this medicine\", 1, \"btn\", \"btn-outline-danger\", \"btn-sm\"], [1, \"fas\", \"fa-trash-alt\"]],\n    template: function MedicinelistComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\")(3, \"th\", 2);\n        i0.ɵɵtext(4, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"th\", 2);\n        i0.ɵɵtext(6, \"Drug Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"th\", 2);\n        i0.ɵɵtext(8, \"Stock\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"th\", 2);\n        i0.ɵɵtext(10, \"Register Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\", 2);\n        i0.ɵɵtext(12, \"Updated Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\", 2);\n        i0.ɵɵtext(14, \"Medicine ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"th\", 2);\n        i0.ɵɵtext(16, \"Actions\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(17, \"tbody\");\n        i0.ɵɵtemplate(18, MedicinelistComponent_tr_18_Template, 23, 20, \"tr\", 3);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"ngForOf\", ctx.medicines);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf, i2.DatePipe],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;IAaQA,6BAAkI;IAC1HA,YAAe;IAAAA,iBAAK;IACxBA,0BAAI;IAAAA,YAAsB;IAAAA,iBAAK;IAC/BA,0BAAI;IAEIA,YACJ;IAAAA,iBAAO;IAEXA,0BAAI;IAAAA,YAAwD;;IAAAA,iBAAK;IACjEA,2BAAI;IAAAA,aAAsF;;IAAAA,iBAAK;IAC/FA,2BAAI;IAAAA,aAAuB;IAAAA,iBAAK;IAChCA,2BAAI;IAEIA,wBAA2B;IAACA,yBAChC;IAAAA,iBAAS;IACTA,kCAA4H;IACxHA,wBAAgC;IAACA,yBACrC;IAAAA,iBAAS;;;;;IAjBsBA,2GAA0F;IACzHA,eAAe;IAAfA,oCAAe;IACfA,eAAsB;IAAtBA,2CAAsB;IAEhBA,eAAsF;IAAtFA,sGAAsF;IACxFA,eACJ;IADIA,kDACJ;IAEAA,eAAwD;IAAxDA,6FAAwD;IACxDA,eAAsF;IAAtFA,6HAAsF;IACtFA,eAAuB;IAAvBA,4CAAuB;;;ACdvC,OAAM,MAAOC,qBAAqB;EAElCC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;IADjC,cAAS,GAAe,EAAE;EAG5B;EACAC,QAAQ;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EACAA,YAAY;IACV,IAAI,CAACF,eAAe,CAACE,YAAY,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACnD,IAAI,CAACC,SAAS,GAAGD,IAAI;IAEvB,CAAC,CAAC;EACJ;EAAC;qBAbYN,qBAAqB;EAAA;EAAA;UAArBA,qBAAqB;IAAAQ;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDTlCb,gCAA2E;QAG/CA,kBAAE;QAAAA,iBAAK;QACvBA,6BAAgB;QAAAA,yBAAS;QAAAA,iBAAK;QAC9BA,6BAAgB;QAAAA,qBAAK;QAAAA,iBAAK;QAC1BA,6BAAgB;QAAAA,8BAAa;QAAAA,iBAAK;QAClCA,8BAAgB;QAAAA,6BAAY;QAAAA,iBAAK;QACjCA,8BAAgB;QAAAA,4BAAW;QAAAA,iBAAK;QAChCA,8BAAgB;QAAAA,wBAAO;QAAAA,iBAAK;QAGpCA,8BAAO;QACHA,wEAmBK;QACTA,iBAAQ;;;QApBqBA,gBAAY;QAAZA,uCAAY","names":["i0","MedicinelistComponent","constructor","medicineService","ngOnInit","getMedicines","subscribe","data","medicines","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\SpringBootProjects\\FrontEndAngular\\hims\\src\\app\\medicinelist\\medicinelist.component.html","D:\\SpringBootProjects\\FrontEndAngular\\hims\\src\\app\\medicinelist\\medicinelist.component.ts"],"sourcesContent":["<table class=\"table table-striped table-bordered table-hover align-middle\">\n    <thead class=\"table-dark\">\n        <tr>\n            <th scope=\"col\">ID</th>\n            <th scope=\"col\">Drug Name</th>\n            <th scope=\"col\">Stock</th>\n            <th scope=\"col\">Register Date</th>\n            <th scope=\"col\">Updated Date</th>\n            <th scope=\"col\">Medicine ID</th>\n            <th scope=\"col\">Actions</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let medicine of medicines\" [ngClass]=\"{'table-warning': medicines.stock < 10, 'table-success': medicine.stock >= 10}\">\n            <td>{{medicine.id}}</td>\n            <td>{{medicine.drugsName}}</td>\n            <td>\n                <span [ngClass]=\"{'text-danger': medicine.stock < 10, 'text-success': medicine.stock >= 10}\">\n                    {{medicine.stock}}\n                </span>\n            </td>\n            <td>{{medicine.registerDate | date: 'd MMMM, yyyy, h:mm a'}}</td>\n            <td>{{medicine.updatedDate ? (medicine.updatedDate | date: 'MMMM d, yyyy, h:mm a') : '-'}}</td>\n            <td>{{medicine.medicineId}}</td>\n            <td>\n                <button class=\"btn btn-outline-primary btn-sm me-2\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Update this medicine\">\n                    <i class=\"fas fa-edit\"></i> Update\n                </button>\n                <button class=\"btn btn-outline-danger btn-sm\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Delete this medicine\">\n                    <i class=\"fas fa-trash-alt\"></i> Delete\n                </button>\n            </td>\n        </tr>\n    </tbody>\n</table>\n","import { Component } from '@angular/core';\nimport { MedicineService } from '../medicine.service';\nimport { Medicine } from '../medicine';\n\n@Component({\n  selector: 'app-medicinelist',\n  templateUrl: './medicinelist.component.html',\n  styleUrls: ['./medicinelist.component.css']\n})\nexport class MedicinelistComponent {\n  medicines: Medicine[] = [];\nconstructor(private medicineService: MedicineService) {\n  \n}\nngOnInit(): void {\n  this.getMedicines();\n}\ngetMedicines() {\n  this.medicineService.getMedicines().subscribe(data => {\n    this.medicines = data;\n\n  })\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}